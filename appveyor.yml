image: Visual Studio 2017
platform: x86
configuration: Release

environment:
  matrix:
    - USE_MSVC: 1
      QTDIR: C:\Qt\5.11\msvc2015
    - USE_WINRT: 1
      QTDIR: C:\Qt\5.11\winrt_x86_msvc2017
    - USE_MINGW: 1
      QTDIR: C:\Qt\5.11\mingw53_32

install:
  - set
  - if "%USE_MSVC%"=="1" set PATH=%QTDIR%\bin;C:\Qt\Tools\QtCreator\bin;C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin;%PATH%
  - if "%USE_WINRT%"=="1" set PATH=%QTDIR%\bin;C:\Qt\Tools\QtCreator\bin;%PATH%
  - if "%USE_MINGW%"=="1" set PATH=%QTDIR%\bin;C:\Qt\Tools\mingw530_32\bin;%PATH%
  - if "%USE_WINRT%"=="1" call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvarsall.bat" x86
  - if "%USE_MSVC%"=="1" call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86
  - curl -L -o upx.zip https://github.com/upx/upx/releases/download/v4.2.2/upx-4.2.2-win32.zip &&
    7z e upx.zip *.exe -r

before_build:
  - qmake -config release Hyne.pro

build_script:
  - if "%USE_MSVC%"=="1" jom
  - if "%USE_WINRT%"=="1" jom
  - if "%USE_MINGW%"=="1" mingw32-make

after_build:
  - FOR /F %%i IN ('git describe --tags') DO SET GIT_TAG_OR_BRANCH=%%i
  - if "%USE_MSVC%"=="1" set DEPLOY_DIR="hyne-%GIT_TAG_OR_BRANCH%-win32"
  - if "%USE_WINRT%"=="1" set DEPLOY_DIR="hyne-%GIT_TAG_OR_BRANCH%-winrt32"
  - if "%USE_MINGW%"=="1" set DEPLOY_DIR="hyne-%GIT_TAG_OR_BRANCH%-win32-xp"
  - echo "%DEPLOY_DIR%"
  - deploy.bat
  - MOVE *.qm deploy
  - DIR deploy
  - MOVE deploy "%DEPLOY_DIR%"
  - 7z a "%DEPLOY_DIR%.zip" "%DEPLOY_DIR%"

artifacts:
  - path: hyne-*.zip

deploy:
  description: Description # Mandatory
  provider: GitHub
  auth_token:
    secure: bEZQyYeFrSaFzPe4uWO5WZGUPGq+qrxt3rb3077AEOBPOxqErqnA5rCkNWO7OR6R
  artifact: /hyne-.*\.zip/
  on:
    appveyor_repo_tag: true # deploy on tag push only
